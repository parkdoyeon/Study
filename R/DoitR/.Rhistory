group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(top_group=sum(n)) %>%
mutate(pct=round(n/tot_group100, 1))
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(top_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1))
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1))
table(religion_marriage)
qplot(religion_marriage)
qplot(religion_marriage)
divorce <- religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(religion, pct)
divorce
divorce
qplot(welfare$group_marriage)
welfare$group_marriage <- ifelse(welfare$marriage == 1, "marriage",
ifelse(welfare$marriage == 3, "divorce", NA))
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>% #단일 형식의 테이블이 생성되지 않는 것 같다.
group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1))
table(religion_marriage)
divorce <- religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(religion, pct)
divorce
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>% #단일 형식의 테이블이 생성되지 않는 것 같다.
group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1)) %>%
select(group_marriage, religion, tot_group, pct)
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>% #단일 형식의 테이블이 생성되지 않는 것 같다.
group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1)) %>%
table(religion_marriage)
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>% #단일 형식의 테이블이 생성되지 않는 것 같다.
group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1)) %>%
select(group_marriage, religion, tot_group, pct)
table(religion_marriage)
religion_marriage
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>% #단일 형식의 테이블이 생성되지 않는 것 같다.
group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1)) %>%
select(group_marriage, religion, tot_group, pct, n)
religion_marriage
ageg_marriage <- welfare %>% filter(!is.na(ageg, group_marriage, religion)) %>%
group_by(ageg, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1))
ageg_marriage <- welfare %>% filter(!is.na(group_marraige)) %>%
group_by(ageg, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1))
ageg_marriage <- welfare %>% filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1))
ageg_marriage
ageg_divorce <-ageg_marriage %>% filter(ageg != young & group_marriage == "divorce") %>%
select(ageg, pct)
ageg_divorce <-ageg_marriage %>% filter(ageg != "young" & group_marriage == "divorce") %>%
select(ageg, pct)
count
?count
ageg_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & ageg != "young") %>%
group_by(ageg, religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1))
ageg_religion_marriage
ageg_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & ageg != "young") %>%
group_by(ageg, group_marriage, religion) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1))
ageg_religion_marriage
ageg_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & ageg != "young") %>%
count(ageg, religion, group_marriage)
ageg_religion_marriage
ageg_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & ageg != "young") %>%
count(ageg, religion, group_marriage) %>% #n 필드 자동생성
group_by(ageg, religion) %>%
mutate(pct=round(n/sum(n)*100, 1))
ageg_religion_marriage
list_region <- data.frame(code_region=c(1:7), region=c("서울", "수도권(인천/경기)", "부산/경남/울산", "대구/경북", "대전/충남",
"강원/충북", "광주/전남/전북/제주도"))
list_region
welfare<- left_join(welfare, list_region, id="code_region")
welfare %>% group_by(region, ageg) %>%
summarise(n=n()) %>%
mutate(tot=sum(n)) %>%
mutate(ctp=round(n/tot*100,2))
welfare %>% group_by(region, ageg) %>%
summarise(n=n()) %>%
mutate(tot=sum(n)) %>%
mutate(ctp=round(n/tot*100,3))
welfare %>% count(region, ageg) %>%
mutate(tot=sum(n)) %>%
mutate(ctp=round(n/tot*100,3))
welfare %>% count(region, ageg) %>%
mutate(tot=n()) %>%
mutate(ctp=round(n/tot*100,3))
welfare %>% count(region, ageg) %>%
group_by(religion) >%>
summarise(tot=n()) %>%
mutate(ctp=round(n/tot*100,3))
welfare %>% count(region, ageg) %>%
group_by(religion) %>%
summarise(tot=n()) %>%
mutate(ctp=round(n/tot*100,3))
welfare %>% count(region, ageg) %>%
group_by(region) %>%
summarise(tot=n()) %>%
mutate(ctp=round(n/tot*100,3))
welfare %>% count(region, ageg) %>%
group_by(region) %>%
#summarise(tot=n()) %>% 왜안돼?
mutate(ctp=round(n/sum(n)*100,3))
region_ageg <- welfare %>% count(region, ageg) %>%
group_by(region) %>%
#summarise(tot=n()) %>% 왜안돼?
mutate(ctp=round(n/sum(n)*100,2))
region_ageg <- welfare %>% count(region, ageg) %>%
group_by(region) %>%
#summarise(tot=n()) %>% 왜안돼?
mutate(pct=round(n/sum(n)*100,2))
ggplot(data=religion_ageg, aes(x=region, y=pct, fill=ageg)) + geom_col() + coord_flip()
ggplot(data=region_ageg, aes(x=region, y=pct, fill=ageg)) + geom_col() + coord_flip()
list_order_old <- region_ageg %>%
filter(ageg == "old") %>%
arrange(pct)
order < - list_order_old$region
order <- list_order_old$region
ggplot(region_ageg, aes(x=region, y=pct, fill=ageg)) +
geom_col() +
coord_flip() +
scale_x_discrete(limits=order)
region_ageg$ageg <- factor(region_ageg$ageg, level=c("old", "middle", "young"))
levels(region_ageg$ageg)
?scale_x_discrete
install.packages("rJava")
install.packages("memoise")
install.packages("KoNLP")
useNIADic()
install.packages("KoNLP")
install.packages("memoise")
useNIADic()
library(KoNLP)
library(dplyr)
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
txt <- readLines("hiphop.txt")
useNIADic()
library(KoNLP)
library(dplyr)
`dyn.load('/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home/jre/lib/server/libjvm.dylib')`
`dyn.load('/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home/jre/lib/server/libjvm.dylib')`
dyn.load('/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
library(KoNLP)
library(dplyr)
dyn.load("/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home/jre/lib/server/libjvm.dylib")
dyn.load("~/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home/jre/lib/server/libjvm.dylib")
dyn.load("/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home/jre/lib/server/libjvm.dylib")
dyn.load("/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home/lib/server/libjvm.dylib")
library(KoNLP)
library(dplyr)
dyn.load("/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home/lib/server/libjvm.dylib")
library(KoNLP)
library(dplyr)
install.packages("rJava")
dyn.load("/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home/lib/server/libjvm.dylib")
library(KoNLP)
library(dplyr)
library(rJava)
dyn.load("/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home/lib/server/libjvm.dylib")
library(rJava)
install.packages("rJava")
dyn.load("/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home/lib/server/libjvm.dylib")
library(rJava)
install.packages("rJava",,"http://rforge.net/",type="source")
dyn.load("/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home/lib/server/libjvm.dylib")
library(rJava)
.jcall("java/lang/System", "S", "getProperty", "java.runtime.version")
.jcall("java/lang/System", "S", "getProperty", "java.runtime.version")
library(rJava)
options(java.home="/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk")
library(rJava)
Sys.setenv(DYLD_FALLBACK_LIBRARY_PATH="/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home/jre/lib/server/")
library(rJava)
library(rJava)
install.packages('rJava',,'http://www.rforge.net/')
library(KoNLP)
Sys.getenv("JAVA_HOME")
options(java.home="/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk")
Sys.getenv("JAVA_HOME")
options(JAVA.HOME="/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk")
A
Sys.getenv("JAVA_HOME")
Sys.setenv(JAVA_HOME = '/Library/Java/JavaVirtualMachines/jdk1.11.0.2.jdk/Contents/Home/jre')
Sys.getenv("JAVA_HOME")
install.packages("rJava",,"http://rforge.net/",type="source")
library(KoNLP)
remove.packsges()
remove.packages()
remove.packages(rJava)
remove.packages("rJava)
remove.packages("rJava")
remove.packages("rJava")
install.packages("rJava",,"http://rforge.net/",type="source")
remove.packages("rJava")
install.packages("rJava",,"http://rforge.net/",type="source")
Sys.setenv(JAVA_HOME = '/Library/Java/JavaVirtualMachines/jdk1.11.0.2.jdk/Contents/Home/jre')
remove.packages("rJava")
install.packages("rJava",,"http://rforge.net/",type="source")
remove.packages("rJava")
Sys.setenv(JAVA_HOME = '/Library/Java/JavaVirtualMachines/jdk1.11.0.2.jdk/Contents/Home/jre')
install.packages("rJava",,"http://rforge.net/",type="source")
Sys.setenv(JAVA_HOME = '/Library/Java/JavaVirtualMachines/jdk1.11.0.2.jdk/Contents/Home/jre')
install.packages(rJava)
install.packages("rJava",,"http://rforge.net/",type="source")
library(KoNLP)
install.packages("rJava",,"http://rforge.net/",type="source")
install.packages("rJava",,"http://rforge.net/",type="source")
install.packages("rJava",,"http://rforge.net/",type="source")
?read.csv
?ggplot
??ggplot
ggplot(welfare5_1, aes(x=age, y=mean_income, fill=sex)) +
geom_line()
library(ggplot2)
ggplot(sex_income, aes(x=sex, y=mean_income))+geom_col()
ggplot(sex_income, aes(x=sex, y=mean_income))+geom_col()
aes
ggplot(sex_income, aes(x=sex, y=mean_income))+geom_col()
ggplot(sex_income, des(x=sex, y=mean_income))+geom_col()
?brewer.pal
??brewer.pal
?read.csv
install.packages("wordcloud")
library(wordcloud)
??brewer.pal
library(RColorBrewer)
?brewer.pal
?read.csv
install.packages("ggiraphExtra")
install.packages("ggiraphExtra")
library(ggiraphExtra)
remove.packages("ggiraphExtra")
install.packages("gdtools", type = "source")
install.packages("ggiraphExtra")
library(ggiraphExtra)
library(tibble)
crime <- rownames_to_column(USArrests, var="state")
crime$state <- tolower(crime$state)
table(USArrests)
USArrests
?rownames_to_column
crime
library(ggplot2)
states_map <- map_data("state")
library(maps)
install.packages("maps")
library(maps)
states_map <- map_data("state")
str(states_map)
ggChoropleth(data=crime,
aes(fill=Murder,
map_id=state),
map=states_map)
install.packages("mapproj")
library(mapproj)
ggChoropleth(data=crime,
aes(fill=Murder,
map_id=state),
map=states_map)
ggChoropleth(data=crime,
aes(fill=Murder,
map_id=state),
map=states_map,
interactive=T)
ggChoropleth(data=crime,
aes(fill=Murder,
map_id=state),
map=states_map,
interactive=True)
install.packages("stringi")
install.packages("stringi")
install.packages("devtools")
devtools::install_github("cardiomoon/kormaps2014")
str(korpop1)
library(kormaps2014)
str(korpop1)
str(changeCode(korpop1)
str(changeCode(korpop1))
str(changeCode(korpop1))
library(kormaps2014)
str(changeCode(korpop1))
str(changeCode(korpop1))
Sys.setlocale(category = "LC_ALL", locale = "us")
str(changeCode(korpop1))
Sys.setlocale(category = "LC_ALL", locale = "US")
guess_encoding(korpop1)
library(readr)
guess_encoding(korpop1)
?changeCode
str(changeCode(korpop1, from=guess_encoding(korpop1))
str(changeCode(korpop1, from=guess_encoding(korpop1)))
encoded <- changeCode(korpop1, from=guess_encoding(korpop1))
encoded <- changeCode(korpop1, from="UTF-8")
str(encoded)
encoded <- changeCode(korpop1, from="UTF-8", to="CP949")
str(encoded)
korpop1
str(korpop1)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interative=T)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interative=T)
library(ggiraphExtra)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interative=T)
library(ggplot2)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interative=T)
korpop1 <-rename(korpop1,
pop=총인구_명,
name=행정구역_읍면동)
library(dplyr)
korpop1 <-rename(korpop1,
pop=총인구_명,
name=행정구역_읍면동)
korpop1 <-rename(korpop1,
pop=총인구_명,
name=행정구역별_읍면동)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interative=T)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive=T)
ggChoropleth(data=tbc,
aes(fill=NewPts,
map_id=code,
tooltip=name),
map=kormap1,
interactive=T)
?set.seed
?wordcloud
?wordcloud
?wordcloud
??wordcloud
?set.seed
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>% #단일 형식의 테이블이 생성되지 않는 것 같다.
group_by(religion, group_marriage) %>%
summarise(n=n())
religion_marriage
?sum
?c
credit_rating <- c("AAA", "A", "BB")
bond_owners <- c("Dan", "Tom", "Joe")
bonds <- c(credit_rating, bond_owners)
bonds
bonds <- data.frame(credit_rating, bond_owners)
bonds
bonds <- data.frame(credit_rating, bond_owners, stringsAsFactors = T)
bonds
credit_rating <- c("A", "A", "BB")
bond_owners <- c("Dan", "Tom", "Joe")
bonds <- data.frame(credit_rating, bond_owners, stringsAsFactors = T)
bonds
str(bons)
str(bonds)
bonds
install.packages("plotly")
library(plotly)
library(ggplot2)
p<-ggplot(data=mpg, aes(x=displ,y=hwy,col=drv))+geom_point()
ggplot(p)
ggplotly(p)
dia_p <- ggplot(data=diamonds, aes(x=cut, fill=clarity)) + geom_bar(position="dodge");\
dia_p <- ggplot(data=diamonds, aes(x=cut, fill=clarity)) + geom_bar(position="dodge");
ggplotly(dia_p)
# 12-2
install.packages("dygraphs")
library(dygraphs)
eco_p <- economics
head(eco_p)
library(xts)
library(xts)
eco <- xts(economics$unemploy, order.by=economics$date)
head(eco)
dygraph(eco)
dygraph(eco) %>%
dyRangeSelector()
eco_a <- xts(economics$psavert, order.by=economics$date)
eco_b <- xts(economics$unemploy/1000, order.by=economics$date)
?cbind
eco2
eco2 <- cbind(eco_a, eco_b)
eco2
colnames(eco2) <- c("psavert", "unemploy")
eco2
dygraph(eco2) %>% dyRangeSelector()
exam <- read.csv("csv_exam.csv")
exam <- read.csv("csv_exam.csv")
exam[]
exam[,"math" & "class"]
library(ggplot2)
mpg
ggplot::mpg
ggplot2::mpg
mpg[mpg$class == "suv" & mpg$class="compact"]
mpg[mpg$class == "suv" & mpg$class="compact",]
mpg[mpg$class == "suv" & mpg$class=="compact",]
mpg[mpg$class == "suv" & mpg$class=="compact",1]
mpg
mpg[mpg$class == "suv" | mpg$class=="compact",]
mpg[mpg$class == "suv" | mpg$class=="compact",c("cty", "hwy")]
s_ch <- mpg[mpg$class == "suv",c("cty", "hwy")]
c_ch <- mpg[mpg$class == "compact",c("cty", "hwy")]
s_ch_m <- (s_ch$cty + s_ch$hwy)/2
s_ch_m
aggregate(s_ch, s_ch_m, mean)
?aggregate
aggregate(s_ch, cty~hwy, mean)
s_ch <- mpg[mpg$class == "suv",c("cty", "hwy")]
s_ch$aver <- (s_ch$cty + s_ch$hwy)/2
aggregate(s_ch, aver~class, mean)
s_ch
s_ch <- mpg[mpg$class == "suv",c("cty", "hwy", "class")]
s_ch$aver <- (s_ch$cty + s_ch$hwy)/2
s_ch
aggregate(s_ch, aver~class, mean)
ch <- mpg[mpg$class == "suv" | mpg$class == "compact",c("cty", "hwy", "class")]
ch$aver <- (ch$cty + ch$hwy)/2
aggregate(ch, aver~class, mean)
ch$aver <- (ch$cty + ch$hwy)/2
aggregate(ch, aver~class, mean)
aggregate(ch, class, mean)
ch
aggregate(ch, class, mean)
aggregate(class~aver, class, sum)
aggregate(ch, class~aver, sum)
aggregate(aver~class, data=ch, sum)
aggregate(aver~class, data=ch, mean)
#15-3
?boxplot
economics <- ggplot2::economics
cor.test(economics$unemploy, economics$pce)
class(economics)
bonds
str(bonds)
guess_encoding(s_ch)
library(readr)
guess_encoding(s_ch)
changeCode(economics)
?changeCode
??changeCode
